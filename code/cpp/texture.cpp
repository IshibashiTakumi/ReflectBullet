//=============================================================================
// テクスチャの生成
//=============================================================================

//=============================================================================
// インクルードファイル
//=============================================================================
#include "main.h"
#include "texture.h"
#include "renderer.h"
#include "manager.h"
#include "resource.h"
using namespace directory;

//=============================================================================
// グローバル変数
//=============================================================================

//=============================================================================
// クラスの生成
//=============================================================================
CTexture::CTexture(const string &FileName)
{
	
	LPDIRECT3DDEVICE9 pDevice = CRenderer::GetInstance()->GetDevice();				//デバイスの取得 

	if (FAILED(D3DXCreateTextureFromFile(pDevice, (Texture_Directory + FileName).c_str(), &m_Texture)))
	{
		m_Texture = NULL;
		m_FileName = "None";
		return;
	}
	m_FileName = FileName;
}

//=============================================================================
// クラスの破棄
//=============================================================================
CTexture::~CTexture()
{
	ResourceRelease(m_Texture);
	m_FileName.clear();
}

//=============================================================================
// LPDIRECT3DTEXTURE9にキャスト
//=============================================================================
CTexture::operator LPDIRECT3DTEXTURE9() const
{
	//自身が存在しなかったらnullptrを返す
	return (this == nullptr) ? nullptr : m_Texture;
}
