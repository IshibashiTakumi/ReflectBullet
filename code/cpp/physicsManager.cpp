//=============================================================================
// 物理演算管理クラス
//=============================================================================

//=============================================================================
// インクルードファイル
//=============================================================================
#include "main.h"
#include "physicsManager.h"
#include "physics.h"

//=============================================================================
// グローバル変数
//=============================================================================
CPhysicsManager* CPhysicsManager::Instance = NULL;	//インスタンス

//=============================================================================
// クラスの生成
//=============================================================================
CPhysicsManager::CPhysicsManager()
{

}

//=============================================================================
// クラスの破棄
//=============================================================================
CPhysicsManager::~CPhysicsManager()
{

}

//=============================================================================
// すべての解放
//=============================================================================
void CPhysicsManager::UninitAll(void)
{
	for each (auto list in m_List)
	{
		list->Uninit();
		delete list;
	}
	m_List.clear();
	m_ReleaseList.clear();
}

//=============================================================================
// すべての更新
//=============================================================================
void CPhysicsManager::UpdateAll(void)
{
	ReleaseList();
	for each (auto list in m_List)
	{
		list->Update();
	}
}

//=============================================================================
// 削除登録
//=============================================================================
void CPhysicsManager::Release(CPhysics* Physics)
{
	m_ReleaseList.push_back(Physics);
}

//=============================================================================
// 登録されたものを削除
//=============================================================================
void CPhysicsManager::ReleaseList(void)
{
	for (auto list = m_ReleaseList.begin(); list != m_ReleaseList.end(); list++)
	{
		(*list)->Uninit();
		list = m_ReleaseList.erase(list);
		delete (*list);
	}
	m_ReleaseList.clear();
}