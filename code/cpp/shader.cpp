//=============================================================================
// Shader基底クラス
//=============================================================================

//=============================================================================
// インクルードファイル
//=============================================================================
#include "main.h"
#include "shader.h"
#include "renderer.h"
using namespace directory;

//=============================================================================
// クラスの生成
//=============================================================================
CShader::CShader()
{
	
}

//=============================================================================
// クラスの破棄
//=============================================================================
CShader::~CShader()
{

}


//=============================================================================
// シェーダクラスの生成
//=============================================================================
void CShader::Init(string& FileName)
{
	LPDIRECT3DDEVICE9 pDevice = CRenderer::GetInstance()->GetDevice();	//レンダラーの取得

	// エフェクト読み込み
	D3DXCreateEffectFromFile(pDevice, (Shader_Directory + FileName).c_str(), 0, 0, D3DXSHADER_SKIPVALIDATION, 0, &m_Effect, &m_Error);
	if (m_Error)
	{
		// コンパイルエラーを出力ウィンドウに表示
		OutputDebugStringA((const char*)m_Error->GetBufferPointer());
		OutputDebugStringA("\n");
	}
	else
	{
		// よくわかんないエラー
		OutputDebugStringA("なんかエフェクト読み込みでエラー出たよ。\n");
	}
}

//=============================================================================
// シェーダクラスの破棄
//=============================================================================
void CShader::Uninit(void)
{
	ResourceRelease(m_Effect);
	ResourceRelease(m_Error);
}

//=============================================================================
// 描画開始
//=============================================================================
void CShader::Begin(void)
{
	
}

//=============================================================================
// 描画終了
//=============================================================================
void CShader::End(void)
{
	
}
