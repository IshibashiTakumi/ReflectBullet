//=============================================================================
// 物理演算管理クラス
//=============================================================================
#pragma once

//=============================================================================
// 前方宣言
//=============================================================================
class CPhysics;

//=============================================================================
// クラスの定義
//=============================================================================
class CPhysicsManager
{
public:
	//インスタンスを返す
	static CPhysicsManager* GetInstance() { return Instance == NULL ? Instance = new CPhysicsManager() : Instance; };

	//基本的な関数の宣言
	//=============================================================================
	void UninitAll(void);
	void UpdateAll(void);
	void SetPhysics(CPhysics* Physics) { m_List.push_back(Physics); }
	void Release(CPhysics* Physics);

private:
	static  CPhysicsManager* Instance;	//インスタンス

	//コンストラクタ・デストラクタ
	//=============================================================================
	CPhysicsManager();
	~CPhysicsManager();

	//解放用リスト
	//=============================================================================
	void ReleaseList(void);		//physics

	//変数
	//=============================================================================
	list<CPhysics*> m_List;				//リスト構造
	list<CPhysics*> m_ReleaseList;		//解放用リスト
};