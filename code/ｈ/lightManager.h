//=============================================================================
// Lightの管理
//=============================================================================
#pragma once

//=============================================================================
// 前方宣言
//=============================================================================
class CLight;

//=============================================================================
// クラスの定義
//=============================================================================
class CLightManager
{
public:
	//インスタンスを返す
	static CLightManager* GetInstance() { return Instance == NULL ? Instance = new CLightManager() : Instance; };

	//基本的な関数の宣言
	//=============================================================================
	void CreateAll(void);
	void UninitAll(void);
	void UpdateAll(void);
	void SetList(CLight* Light) { m_List.push_back(Light); }
	void Release(CLight* Light);

	//設定・取得関数
	//=============================================================================
	list<CLight*> GetList(void) { return m_List; }	//指定したリストの取得

private:
	static  CLightManager* Instance;	//インスタンス

	//コンストラクタ・デストラクタ
	//=============================================================================
	CLightManager() { m_List.clear(); m_ReleaseList.clear(); }
	~CLightManager() {};

	//解放用リスト
	//=============================================================================
	void ReleaseList(void);		//behavior

	//変数
	//=============================================================================
	list<CLight*> m_List;		//リスト構造
	list<CLight*> m_ReleaseList;	//解放用リスト
};