//=============================================================================
// 画面遷移
//=============================================================================
#pragma once

//=============================================================================
// 構造体
//=============================================================================
//フェードの状態
typedef enum
{
	FADE_NONE = 0,	//何もしていない
	FADE_IN,		//フェードイン
	FADE_OUT,		//フェードアウト
	FADE_MAX
}FADE;

//=============================================================================
// 前方宣言
//=============================================================================

class CFade
{
public:
	//インスタンスを返す
	static CFade* GetInstance() { return Instance == NULL ? Instance = new CFade() : Instance; };

	//基本関数
	//=============================================================================
	void Init(D3DXCOLOR color, const string& TexName = "", const string& MaskName = "");
	void Uninit(void);
	void Update(void);
	void Draw(int pass = 0);

	//設定・取得関数
	//=============================================================================
	void Start(CMode *NextMode);
	FADE GetFade(void);

private:
	static  CFade* Instance;	//インスタンス

	//コンストラクタ・デストラクタ
	//=============================================================================
	CFade();
	~CFade();

	//変数
	//=============================================================================
	LPDIRECT3DVERTEXBUFFER9 m_VtxBuff;	//頂点バッファ
	LPDIRECT3DTEXTURE9 m_Texture;		//テクスチャ
	LPDIRECT3DTEXTURE9 m_Mask;			//マスク画像
	D3DXCOLOR m_colorFade;				//フェード色
	FADE m_fade;						//フェードの状態
	CMode *m_NextMode;
};