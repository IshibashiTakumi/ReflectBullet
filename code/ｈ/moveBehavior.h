//=============================================================================
// プレイヤーの行動
//=============================================================================
#pragma once

//=============================================================================
// インクルードファイル
//=============================================================================
#include "behavior.h"

//=============================================================================
// 前方宣言
//=============================================================================
class CObject;

//=============================================================================
// クラスの定義
//=============================================================================
class CMoveBehavior : public CBehavior
{
public:

	//コンストラクタ・デストラクタ
	//=============================================================================
	CMoveBehavior();
	~CMoveBehavior();

	//継承したすべてのオブジェクトに対して行う関数
	//=============================================================================
	void Init(string& FileName, float Size);
	void Uninit(void);
	void Update(void);

	//衝突
	//=============================================================================
	void CollisionTrigger(CObject* Object);		//衝突時
	void CollisionEnter(CObject* Object);		//衝突継続時
	void CollisionRelease(CObject* Object);		//衝突終了時

	//設定・取得関数
	//=============================================================================
	vector<vector<int>> m_ThreatLevelMap;

	void ThreatLevelMap(void);

private:
	//変数
	//=============================================================================
	D3DXVECTOR3 m_OldPos;
	D3DXVECTOR3 m_Move;				//プレイヤーの移動量
	D3DXVECTOR3 m_MoveRot;			//プレイヤーの移動時に向かせたい向き
	vector<vector<int>> m_MovementMap;
	float m_Size;
	int m_Width, m_Height;

	//関数
	//=============================================================================
	bool Decision(int x, int y, int _x, int _y);
};