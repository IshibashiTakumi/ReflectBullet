//=============================================================================
// 円の当たり判定
//=============================================================================
#pragma once

//=============================================================================
// インクルードファイル
//=============================================================================
#include "collision.h"

//=============================================================================
// マクロ定義
//=============================================================================
#define SPHERE_COLOR (D3DXCOLOR(1.0f, 0.7f, 0.0f, 1.0f))

//=============================================================================
// 前方宣言
//=============================================================================
class CCollision2DMap;
class CCollisionSquare;

//=============================================================================
// クラスの定義
//=============================================================================
class CCollisionCircle : public CCollision
{
public:

	//コンストラクタ・デストラクタ
	//=============================================================================
	CCollisionCircle(CTransform* Transform, bool Detection);
	~CCollisionCircle();

	//基本的な関数の宣言
	//=============================================================================
	void Init(float Radius);
	void Uninit(void);
	void Draw(void);

	//ダブルディスパッチに必要な宣言
	//=============================================================================
	virtual void CollisionDetection(CCollision* other) { other->DetectionAction(this); }

	//変数
	//=============================================================================
	float m_Radius;	//マスサイズ

protected:

	////ダブルディスパッチの実行部
	////=============================================================================
	virtual void DetectionAction(CCollisionCircle* other);
	virtual void DetectionAction(CCollision2DMap* other);
	virtual void DetectionAction(CCollisionSquare* other);
};